Nº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat
)
colnames(casos)[2:16] <- c("menys7", "menys6", "menys5",
"menys4", "menys3", "menys2",
"menys1", "zero", "mes1",
"mes2", "mes3", "mes4",
"mes5", "mes6", "mes7")
correlations <- data.frame(row.names = colnames(casos[2:16]))
sequence <- -7:7
for (i in 2:16){
correlations$case[i-1] <- sequence[i-1]
correlation <- cor.test(log10(casos$load_N1), log10(casos[,i]+1))
correlations
correlations$corr_value_N1[i-1] <- correlation$estimate
correlations$p_value_N1[i-1] <- correlation$p.value
correlation <- cor.test(log10(casos$load_N2), log10(casos[,i]+1))
correlations
correlations$corr_value_N2[i-1] <- correlation$estimate
correlations$p_value_N2[i-1] <- correlation$p.value
correlation <- cor.test(log10(casos$load_IP4), log10(casos[,i]+1))
correlations
correlations$corr_value_IP4[i-1] <- correlation$estimate
correlations$p_value_IP4[i-1] <- correlation$p.value
}
max_corr_N1 <- correlations$case[correlations$corr_value_N1 == max(correlations$corr_value_N1)]
max_corr_N2 <- correlations$case[correlations$corr_value_N2 == max(correlations$corr_value_N2)]
max_corr_IP4 <- correlations$case[correlations$corr_value_IP4 == max(correlations$corr_value_IP4)]
for (i in 1:nrow(correlations)){
correlations$mean_corr[i] <- mean(correlations$corr_value_N1[i],
correlations$corr_value_N2[i],
correlations$corr_value_IP4[i])
}
max_corr <- correlations$case[correlations$mean_corr == max(correlations$mean_corr)]
ggplot(correlations, aes(case))+
geom_line(aes(y= corr_value_N1, color="N1"))+#geom_point()+
geom_line(aes(y= corr_value_N2, color="N2"))+#geom_point()+
geom_line(aes(y= corr_value_IP4, color="IP4"))+#geom_point()+
#geom_line(aes(x=case-4, corr_value,  color="Onset cases"))+
#geom_point(aes(x=case-4, corr_value, color="Onset cases"))+
geom_vline(aes(xintercept=0), linetype="dotted")+
geom_vline(aes(xintercept=max_corr_N1, color="N1"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_N2, color="N2"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_IP4, color="IP4"), linetype="dashed", size = 1)+
#geom_vline(aes(xintercept=max_corr, color="Mean"), linetype="dashed", size = 1.5)+
theme(legend.position = "bottom")+
scale_color_discrete(name="Target")+
labs(y="Correlation value", x= "Wastewater leads cases by x days")
setwd("C:/Users/jpueyo/OneDrive - ICRA/Other projects/sarsaigua/")
#load functions for data collection and curation
source('analysis_sarsaigua/functions.R')
dirname(rstudioapi::getSourceEditorContext()$path)
path <- dirname(rstudioapi::getSourceEditorContext()$path)
path <- dirname(rstudioapi::getSourceEditorContext()$path)
source(paste(path,"functions.R", sep="/"))
source(paste(path,"vaccine_curation.R", sep="/"))
path <- dirname(rstudioapi::getSourceEditorContext()$path)
source(paste(path,"functions.R", sep="/"))
source(paste(path,"vaccine_curation.R", sep="/"))
setwd(path)
getwd
getwd()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
View(correlations)
path <- dirname(rstudioapi::getSourceEditorContext()$path)
source(paste(path,"functions.R", sep="/"))
library(tidyverse)
library(lubridate)
library(grid)
library(gridExtra)
library(RColorBrewer)
path <- dirname(rstudioapi::getSourceEditorContext()$path)
source(paste(path,"functions.R", sep="/"))
source(paste(path,"functions.R", sep="/"))
path <- dirname(rstudioapi::getSourceEditorContext()$path)
source(paste(path,"functions.R", sep="/"))
source(paste(path,"functions.R", sep="/"))
setwd(path)
data <- load_excel(remove_first = F)
filter_value <- 0
source(paste(path,"functions.R", sep="/"))
setwd(path)
data <- load_excel(remove_first = F)
filter_value <- 0
casos <- data %>%
select(Data.mostreig,
matches("NÂº.casos.dia"),
N1.Concentracio.final,
N2.Concentracio.final,
IP4.Concentracio.final,
Cabal.influent.Ãºltimes.24h.calculat,
EDAR.provincia,
NÂº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.Ãºltimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.Ãºltimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.Ãºltimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.Ãºltimes.24h.calculat
)
casos <- data %>%
select(Data.mostreig,
matches("NÂº.casos.dia"),
N1.Concentracio.final,
N2.Concentracio.final,
IP4.Concentracio.final,
Cabal.influent.últimes.24h.calculat,
EDAR.provincia,
NÂº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat
)
casos <- data %>%
select(Data.mostreig,
matches("NÂº.casos.dia"),
N1.Concentracio.final,
N2.Concentracio.final,
IP4.Concentracio.final,
Cabal.influent.últimes.24h.calculat,
EDAR.provincia,
Nº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat
)
casos <- data %>%
select(Data.mostreig,
matches("Nº.casos.dia"),
N1.Concentracio.final,
N2.Concentracio.final,
IP4.Concentracio.final,
Cabal.influent.últimes.24h.calculat,
EDAR.provincia,
Nº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat
)
colnames(casos)[2:16] <- c("menys7", "menys6", "menys5",
"menys4", "menys3", "menys2",
"menys1", "zero", "mes1",
"mes2", "mes3", "mes4",
"mes5", "mes6", "mes7")
correlations <- data.frame(row.names = colnames(casos[2:16]))
sequence <- -7:7
for (i in 2:16){
correlations$case[i-1] <- sequence[i-1]
correlation <- cor.test(log10(casos$load_N1), log10(casos[,i]+1))
correlations
correlations$corr_value_N1[i-1] <- correlation$estimate
correlations$p_value_N1[i-1] <- correlation$p.value
correlation <- cor.test(log10(casos$load_N2), log10(casos[,i]+1))
correlations
correlations$corr_value_N2[i-1] <- correlation$estimate
correlations$p_value_N2[i-1] <- correlation$p.value
correlation <- cor.test(log10(casos$load_IP4), log10(casos[,i]+1))
correlations
correlations$corr_value_IP4[i-1] <- correlation$estimate
correlations$p_value_IP4[i-1] <- correlation$p.value
}
correlations <- data.frame(row.names = colnames(casos[2:16]))
sequence <- -7:7
for (i in 2:16){
correlations$case[i-1] <- sequence[i-1]
correlation <- cor.test(log10(casos$load_N1), log10(casos[,i]+1))
correlations$corr_value_N1[i-1] <- correlation$estimate
correlations$p_value_N1[i-1] <- correlation$p.value
correlation <- cor.test(log10(casos$load_N2), log10(casos[,i]+1))
correlations$corr_value_N2[i-1] <- correlation$estimate
correlations$p_value_N2[i-1] <- correlation$p.value
correlation <- cor.test(log10(casos$load_IP4), log10(casos[,i]+1))
correlations$corr_value_IP4[i-1] <- correlation$estimate
correlations$p_value_IP4[i-1] <- correlation$p.value
}
View(correlations)
max_corr_N1 <- correlations$case[correlations$corr_value_N1 == max(correlations$corr_value_N1)]
max_corr_N2 <- correlations$case[correlations$corr_value_N2 == max(correlations$corr_value_N2)]
max_corr_IP4 <- correlations$case[correlations$corr_value_IP4 == max(correlations$corr_value_IP4)]
for (i in 1:nrow(correlations)){
correlations$mean_corr[i] <- mean(correlations$corr_value_N1[i],
correlations$corr_value_N2[i],
correlations$corr_value_IP4[i])
}
max_corr <- correlations$case[correlations$mean_corr == max(correlations$mean_corr)]
ggplot(correlations, aes(case))+
geom_line(aes(y= corr_value_N1, color="N1"))+#geom_point()+
geom_line(aes(y= corr_value_N2, color="N2"))+#geom_point()+
geom_line(aes(y= corr_value_IP4, color="IP4"))+#geom_point()+
#geom_line(aes(x=case-4, corr_value,  color="Onset cases"))+
#geom_point(aes(x=case-4, corr_value, color="Onset cases"))+
geom_vline(aes(xintercept=0), linetype="dotted")+
geom_vline(aes(xintercept=max_corr_N1, color="N1"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_N2, color="N2"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_IP4, color="IP4"), linetype="dashed", size = 1)+
#geom_vline(aes(xintercept=max_corr, color="Mean"), linetype="dashed", size = 1.5)+
theme(legend.position = "bottom")+
scale_color_discrete(name="Target")+
labs(y="Correlation value", x= "Wastewater leads cases by x days")
View(correlations)
View(casos)
sequence[i-1]
casos <- data %>%
select(Data.mostreig,
matches("Nº.casos.dia"),
N1.Concentracio.final,
N2.Concentracio.final,
IP4.Concentracio.final,
Cabal.influent.últimes.24h.calculat,
EDAR.provincia,
Nº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat
)
View(casos)
ggplot(correlations, aes(case))+
geom_line(aes(y= corr_value_N1, color="N1"))+#geom_point()+
geom_line(aes(y= corr_value_N2, color="N2"))+#geom_point()+
geom_line(aes(y= corr_value_IP4, color="IP4"))+#geom_point()+
geom_line(aes(y=mean_corr, color="mean"))
ggplot(correlations, aes(case))+
geom_line(aes(y= corr_value_N1, color="N1"))+#geom_point()+
geom_line(aes(y= corr_value_N2, color="N2"))+#geom_point()+
geom_line(aes(y= corr_value_IP4, color="IP4"))+#geom_point()+
#geom_line(aes(y=mean_corr, color="mean"))
#geom_line(aes(x=case-4, corr_value,  color="Onset cases"))+
#geom_point(aes(x=case-4, corr_value, color="Onset cases"))+
geom_vline(aes(xintercept=0), linetype="dotted")+
geom_vline(aes(xintercept=max_corr_N1, color="N1"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_N2, color="N2"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_IP4, color="IP4"), linetype="dashed", size = 1)+
#geom_vline(aes(xintercept=max_corr, color="Mean"), linetype="dashed", size = 1.5)+
theme(legend.position = "bottom")+
scale_color_discrete(name="Target")+
labs(y="Correlation value", x= "Wastewater leads cases by x days")
ggplot(correlations, aes(case))+
geom_line(aes(y= corr_value_N1, color="N1"))+#geom_point()+
geom_line(aes(y= corr_value_N2, color="N2"))+#geom_point()+
geom_line(aes(y= corr_value_IP4, color="IP4"))+#geom_point()+
geom_line(aes(y=mean_corr, color="mean"))+
geom_vline(aes(xintercept=0), linetype="dotted")+
geom_vline(aes(xintercept=max_corr_N1, color="N1"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_N2, color="N2"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_IP4, color="IP4"), linetype="dashed", size = 1)+
#geom_vline(aes(xintercept=max_corr, color="Mean"), linetype="dashed", size = 1.5)+
theme(legend.position = "bottom")+
scale_color_discrete(name="Target")+
labs(y="Correlation value", x= "Wastewater leads cases by x days")
?mean
?rowMeans
colnames(correlations)
rowMeans(correlations[c('corr_value_N1','corr_value_N2','corr_value_IP4')])
correlations$mean_corr <- rowMeans(correlations[c('corr_value_N1','corr_value_N2','corr_value_IP4')])
(0.71+0.76+0.60)/3
max_corr <- correlations$case[correlations$mean_corr == max(correlations$mean_corr)]
ggplot(correlations, aes(case))+
geom_line(aes(y= corr_value_N1, color="N1"))+#geom_point()+
geom_line(aes(y= corr_value_N2, color="N2"))+#geom_point()+
geom_line(aes(y= corr_value_IP4, color="IP4"))+#geom_point()+
geom_line(aes(y=mean_corr, color="mean"))+
geom_vline(aes(xintercept=0), linetype="dotted")+
geom_vline(aes(xintercept=max_corr_N1, color="N1"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_N2, color="N2"), linetype="dashed", size = 1)+
geom_vline(aes(xintercept=max_corr_IP4, color="IP4"), linetype="dashed", size = 1)+
#geom_vline(aes(xintercept=max_corr, color="Mean"), linetype="dashed", size = 1.5)+
theme(legend.position = "bottom")+
scale_color_discrete(name="Target")+
labs(y="Correlation value", x= "Wastewater leads cases by x days")
library(tidyverse)
library(lubridate)
library(grid)
library(gridExtra)
library(RColorBrewer)
library(conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
setwd("C:/Users/jpueyo/OneDrive - ICRA/Other projects/sarsaigua")
source('scripts/functions_02.R')
data <- load_excel(folder=getwd())
theme_set(theme_classic())
color1 <- "darkorange"
color2 <- "grey"
color3 <- "blue3"
filter_value <-  0
N1_data <- target_data(data = data, diana = "N1", filter = filter_value)
model <- N1_data %>%
filter(EDAR == "DGIR") %>%
lm(log ~ log_7, .)
summary(model)
edar <- N1_data %>%
filter(EDAR == "DGIR")
autocorr <- acf(edar$log_7, lag.max = 5)
autocorr
sum_N1_inh <- N1_data %>%
group_by(Data.mostreig) %>%
summarize(sum_N1 = sum(load, na.rm = T)) %>%
mutate(log_sum_N1 = log10(sum_N1))
sum_cases <- N1_data %>%
group_by(Data.mostreig) %>%
summarize(sum_7 = sum(darrers_7, na.rm = T)) %>%
mutate(log_sum_7 = log10(sum_7))
sum_inh <- N1_data %>%
group_by(Data.mostreig) %>%
summarise(sum_inh = sum(Nº.habitants.municipis.assistits.EDAR, na.rm = T))
sum_N1_inh <- merge.data.frame(sum_N1_inh, sum_cases, by="Data.mostreig", all = T)
sum_N1_inh <- merge.data.frame(sum_N1_inh, sum_inh, by="Data.mostreig", all = T)
sum_N1_inh <- sum_N1_inh %>%
mutate(sum_N1_inh = sum_N1 / sum_inh * 10^5,
sum_7_inh = sum_7 / sum_inh * 10^5)
diff_N1_inh <- diff(sum_N1_inh$sum_N1_inh)
diff_7_inh <- diff(sum_N1_inh$sum_7_inh)
cor.test(diff_N1_inh, diff_7_inh)
plot(diff_N1_inh, diff_7_inh)
model <- lm(sum_7_inh ~ sum_N1_inh, sum_N1_inh)
plot(model)
aTSA::adf.test(sum_N1_inh$sum_N1_inh)
aTSA::adf.test(sum_N1_inh$sum_7_inh)
autocorr
summary(model)
plot(model)
library(RColorBrewer)
library(conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
source('C:/Users/jpueyo/OneDrive - ICRA/Other projects/sarsaigua/scripts/functions.R')
setwd("C:/Users/jpueyo/OneDrive - ICRA/Other projects/sarsaigua/paper")
data <- load_excel(remove_first = F)
filter_value <- 0
data$EDAR <- factor(data$EDAR)
#case <- "single"
case <- "aggregated"
if (case == "single"){
casos <- data %>%
select(Data.mostreig,
matches("Nº.casos.dia"),
N1.Concentracio.final,
Cabal.influent.últimes.24h.calculat,
EDAR,
Nº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
N2.Concentracio.final = ifelse(N2.Concentracio.final < filter_value, NA, N2.Concentracio.final),
IP4.Concentracio.final = ifelse(IP4.Concentracio.final < filter_value, NA, IP4.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_N2 = N2.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat,
load_IP4 = IP4.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat
)
colnames(casos)[2:16] <- c("-7", "-6", "-5",
"-4", "-3", "-2",
"-1", "0", "+1",
"+2", "+3", "+4",
"+5", "+6", "+7")
columns <- c("EDAR", colnames(casos)[2:16], "max_corr")
cc_results <- data.frame(matrix(nrow = length(levels(data$EDAR)), ncol = length(columns)))
colnames(cc_results) <- columns
cc_results$EDAR <- levels(data$EDAR)
seq_ <- 2:16
title_x <- "Wastewater leads cases by x days"
}
if (case == "aggregated"){
casos <- data %>%
select(Data.mostreig,
matches("Nº.casos.darrers"),
Mitjana.darrers.7.dies..promig.,
N1.Concentracio.final,
Cabal.influent.últimes.24h.calculat,
EDAR,
Nº.habitants.municipis.assistits.EDAR) %>%
filter(!is.nan(Cabal.influent.últimes.24h.calculat)) %>%
mutate(N1.Concentracio.final = ifelse(N1.Concentracio.final < filter_value, NA, N1.Concentracio.final),
load_N1 = N1.Concentracio.final * 1000 * Cabal.influent.últimes.24h.calculat)
colnames(casos)[2:5] <- c("back_7", "back_14", "center_14", "mean_back_7")
columns <- c("EDAR", colnames(casos)[2:5], "max_corr")
cc_results <- data.frame(matrix(nrow = length(levels(data$EDAR)), ncol = length(columns)))
colnames(cc_results) <- columns
cc_results$EDAR <- levels(data$EDAR)
seq_ <- 2:5
title_x <- "Aggregated cases"
}
for (i in 1:nrow(cc_results)){
#extract the data for the EDAR
cas_edar <- casos %>%
filter(EDAR == cc_results$EDAR[i])
#check the number of samples
if (nrow(cas_edar) > 3){
#loop for the sequence
for (j in seq_){
correlation <- cor.test(log10(cas_edar$load_N1), log10(cas_edar[,j]+1))
#print(correlation)
if (!is.na(correlation$p.value) && correlation$p.value < 0.05){
#if correlation is significant, save R
cc_results[i,j] <- correlation$estimate
} else {
#if correlation is not significant burn a 0
cc_results[i,j] <- correlation$estimate
}
}
#determine the max_correlation
if (sum(cc_results[i,seq_]) > 0){
cc_results$max_corr[i] <- colnames(cc_results)[max.col(cc_results[i,seq_])+1]
} else {
cc_results$max_corr[i] <- NA
}
} else {
#if not enough number of samples burn NA
cc_results[i,seq_] <- NA
}
}
t_results <- as.data.frame(t(cc_results[,3:ncol(cc_results)-1]))
colnames(t_results) <- cc_results$EDAR
t_results$lag <- rownames(t_results)
plot_data <- t_results %>%
pivot_longer(cols = levels(data$EDAR))
plot_data$lag <- factor(plot_data$lag, levels = colnames(casos)[seq_],
ordered = T)
plot_data$name <- factor(plot_data$name)
ggplot(plot_data)+
geom_line(aes(x=lag, y=value, group=name, color=name))+
theme(legend.position = "none")+
ylim(0,1)+
labs(y="Correlation value", x= title_x)
library(tidyverse)
library(lubridate)
library(viridis)
source('C:/Users/Josep Pueyo-Ros/OneDrive - ICRA/Other projects/sarsaigua/scripts/functions.R')
setwd("C:/Users/jpueyo/OneDrive - ICRA/Other projects/sarsaigua/results")
library(tidyverse)
library(lubridate)
library(viridis)
path <- dirname(rstudioapi::getSourceEditorContext()$path)
source(paste(path,"functions.R", sep="/"))
setwd(path)
#load excel
data <- load_excel()
#create casos for N1 and correlation
N1_casos <- N1_data(data)
#create casos for N1 and correlation
N1_casos <- target_data(data, diana = "N1")
source(paste(path,"functions.R", sep="/"))
#load excel
data <- load_excel()
#create casos for N1 and correlation
N1_casos <- target_data(data, diana = "N1")
sim1 = function(load, n = 1000){
#FEC random matrix
mu=2.11; sigma=0.25;
FECmatrix = 10^rnorm(n, mu, sigma) # units; grams feces/person/day
# shedding rate of SARS-CoV-2 RNA in feces
# log-uniform distribution from 2.56 to 7.67
x = c(2.56, 7.67)
RNAfecmatrix = 10^(x[1] + (x[2]-x[1]) * runif(n)); #RNA copies per gram feces; de 10^2 a 10^7
median(load / (FECmatrix * RNAfecmatrix)) #el numerador es pot substituir per load_N1
}
interval_ = function(x) c(quantile(x, 0.025),
median(x),
quantile(x, 0.975))
#create df to store simulation results
sim_2.5 <- c()
sim_median <- c()
sim_97.5 <- c()
for (i in 1:nrow(N1_casos)){
res = replicate(1000, sim1(load = N1_casos$load_N1[i]))
sim_2.5 <- c(sim_2.5, interval_(res)[1])
sim_median <- c(sim_median, interval_(res)[2])
sim_97.5 <- c(sim_97.5, interval_(res)[3])
print(i)
}
View(N1_casos)
sum(is.na(N1_casos$load))
?quantile
interval_ = function(x) c(quantile(x, 0.025, na.rm=T),
median(x, na.rm=T),
quantile(x, 0.975, na.rm=T))
#create df to store simulation results
sim_2.5 <- c()
sim_median <- c()
sim_97.5 <- c()
for (i in 1:nrow(N1_casos)){
res = replicate(1000, sim1(load = N1_casos$load_N1[i]))
sim_2.5 <- c(sim_2.5, interval_(res)[1])
sim_median <- c(sim_median, interval_(res)[2])
sim_97.5 <- c(sim_97.5, interval_(res)[3])
print(i)
}
N1_casos <- read.csv2("simulation_calibration.csv")
setwd("C:/Users/jpueyo/Documents/sarsaigua/results")
N1_casos <- read.csv2("simulation_calibration.csv")
setwd("C:/Users/jpueyo/Documents/sarsaigua/results")
